doctype html
html
    head
        title #{title}

        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1")

        each cssFilePath in cssFilesToInject
            link(rel="stylesheet", href="#{ portalPrefix }/#{ cssFilePath }")
    body
        .navbar.navbar-default.navbar-fixed-top.z-depth-2
            .container
                .navbar-header
                    a.navbar-brand.hidden-xs(href="/")
                        img(src="#{ portalPrefix }/resources/core/images/DOME_Icon_White.png")
                .navbar-text #{title}

                a.btn.btn-warning.navbar-btn.navbar-right.z-depth-1(href="/")
                    span.item-text Back
        .container.main-container
            .row
                h2 Please authenticate using the QR in the popup

        hr.fiware-line
    script.
        const popupCenter = ({url, title, w, h}) => {
            // Fixes dual-screen position                             Most browsers      Firefox
            const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;
            const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;

            const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

            const systemZoom = width / window.screen.availWidth;
            const left = (width - w) / 2 / systemZoom + dualScreenLeft
            const top = (height - h) / 2 / systemZoom + dualScreenTop
            const newWindow = window.open(url, title,
                `
              scrollbars=yes,
              width=${w / systemZoom},
              height=${h / systemZoom},
              top=${top},
              left=${left}
              `
            )

            if (window && window.focus) {
                newWindow.focus();
            }
            return newWindow;
        }

        function openWindow() {
            const url = '#{verifierQRCodeURL}?#{statePair}&#{callbackURLPair}&#{clientIDPair}'
            console.log(url)
            return popupCenter({url: url, title: 'Scan QR code', w: 500, h: 500});
        }

        let thePopup = openWindow();
        setInterval(pollServer, 1000, 'nonce');
        //let cbTimeout = setTimeout(triggerCallback, 15000)

        async function pollServer() {
            const referrer = document.referrer;
            let referrerDomain = null
            let path = null

            // Check if the referrer is not empty
            if (referrer) {
                // Create a new URL object based on the referrer
                const referrerUrl = new URL(referrer);

                // Get the domain of the referrer
                referrerDomain = referrerUrl.protocol + '//' + referrerUrl.hostname + (referrerUrl.port ? ':' + referrerUrl.port : '');
                path = referrerUrl.pathname
                console.log("Referrer Domain: ", referrerDomain);
            } else {
                console.log("No referrer data available");
            }

            try {
                const response = await fetch('#{pollURL}?#{statePair}')
                if (response.status === 400 || response.status === 500) {
                    location.replace('/')
                    return
                } else if (response.status === 401) {
                    return
                }
                //clearTimeout(cbTimeout)
                thePopup.close()
            } catch (error) {
                console.log(error)
            }

            // Login correct, redirect to the referrer
            const hostname = window.location.hostname;
            // Get the port of the current page
            const port = window.location.port;
            const proto = window.location.protocol
            const hostnameWithPort = proto + '//' + hostname + (port ? ':' + port : '');
            if (referrerDomain != null && referrerDomain != hostnameWithPort) {
                location.replace(referrerDomain)
            } else if (path != null){
                location.replace(path + '?token=local')
            } else {
                location.replace('/?token=local')
            }
        }

        async function triggerCallback() {
            console.log('Trigger default callback')
            try {
                await fetch('/auth/vc/callback?#{statePair}&code=test')
            } catch (error) {
                console.log(error)
            }
        }